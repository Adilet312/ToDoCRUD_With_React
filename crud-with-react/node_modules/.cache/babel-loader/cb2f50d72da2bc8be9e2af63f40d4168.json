{"ast":null,"code":"var _jsxFileName = \"/home/amt/Desktop/ToDoCRUD_With_React/crud-with-react/src/components/Temp.js\";\nimport React from \"react\";\nimport \"./css/to-do-list-css.css\";\nexport default class Temp extends React.Component {\n  constructor() {\n    super();\n\n    this.inputData = event => this.setState({\n      newtask: event.target.value\n    });\n\n    this.addTask = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      let temptask = {\n        task: this.state.newtask,\n        iscomplete: false,\n        update: false\n      };\n      tempList.push(temptask);\n      this.setState({\n        list: tempList\n      });\n      this.setState({\n        temp: tempList\n      });\n      this.setState({\n        newtask: \"\"\n      });\n    };\n\n    this.activateInput = idx => {\n      let tempList = [];\n      tempList = this.state.list;\n      tempList[idx].update = true;\n      this.setState({\n        list: tempList\n      });\n      this.setState({\n        temp: tempList\n      });\n    };\n\n    this.state = {\n      list: [],\n      newtask: \"\",\n      temp: []\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.newtask,\n      onChange: this.inputData,\n      placeholder: \"enter a new task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Add \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, this.state.temp.map((e, idx) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.activateInput(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, e.task), this.state.update === true ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 49\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"enter data to update\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }\n      }, \"update\")) : '', /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/amt/Desktop/ToDoCRUD_With_React/crud-with-react/src/components/Temp.js"],"names":["React","Temp","Component","constructor","inputData","event","setState","newtask","target","value","addTask","tempList","state","list","temptask","task","iscomplete","update","push","temp","activateInput","idx","render","map","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/to-do-list-css.css\";\n\nexport default class Temp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      newtask: \"\",\n      temp: [],\n\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n  inputData = event => this.setState({ newtask: event.target.value });\n  /*Get a new task from state and put that one to the list.*/\n  addTask = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    let temptask = { task: this.state.newtask, iscomplete: false, update:false };\n    tempList.push(temptask);\n    this.setState({ list: tempList });\n    this.setState({ temp: tempList });\n    this.setState({ newtask: \"\" });\n  };\n  activateInput = (idx) => {\n    let tempList = [];\n    tempList = this.state.list;\n    tempList[idx].update =true;\n    this.setState({ list: tempList });\n    this.setState({ temp: tempList });\n    \n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"new-task\">\n          <input value={this.state.newtask} onChange={this.inputData} placeholder=\"enter a new task\"/>\n          <button onClick={this.addTask}>Add </button>\n        </div>\n        <div className=\"list-box\">\n          <ul>\n            {\n                this.state.temp.map((e, idx) => {\n                return (\n                  <li key={idx}>\n                    <span onClick = { () => this.activateInput(idx) }>{e.task}</span>\n                    {this.state.update===true ? <div> <input type='text' placeholder='enter data to update'/>\n                     <button >update</button></div>: ''}\n                    <hr />\n                  </li>\n                );\n              })\n          }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}