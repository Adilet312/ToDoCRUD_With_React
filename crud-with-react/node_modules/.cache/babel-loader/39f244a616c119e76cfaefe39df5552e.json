{"ast":null,"code":"var _jsxFileName = \"/home/amt/Desktop/ApiCallWithReact/api-call-with-react/src/components/App.js\";\nimport React from \"react\";\nimport \"./css/to-do-list-css.css\";\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.inputData = event => this.setState({\n      newtask: event.target.value\n    });\n\n    this.addTask = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      let temptask = {\n        task: this.state.newtask,\n        iscomplete: false\n      };\n      tempList.push(temptask);\n      this.setState({\n        list: tempList\n      });\n      this.setState({\n        newtask: \"\"\n      });\n    };\n\n    this.deleteTask = givenIndex => {\n      let tempList = [];\n      tempList = this.state.list;\n      tempList.splice(givenIndex, 1);\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.updateTask = index => {\n      let tempList = [];\n      tempList = this.state.list;\n      tempList[index].task = \"sssssssssssssssss\";\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.isComplete = givenIndex => {\n      let tempList = [];\n      tempList = this.state.list;\n      tempList[givenIndex].iscomplete = !tempList[givenIndex].iscomplete;\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.showActive = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      this.setState({\n        tempList: this.state.list\n      });\n      tempList = tempList.filter(element => element.iscomplete != true);\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.showCompleted = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      this.setState({\n        tempList: this.state.list\n      });\n      tempList = tempList.filter(element => element.iscomplete != false);\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.state = {\n      list: [],\n      newtask: \"\"\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.newtask,\n      onChange: this.inputData,\n      placeholder: \"enter a new task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Add \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, this.state.list.map((e, idx) => {\n      let task = !e.iscomplete ? \"complete\" : \"undo\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.updateTask(idx),\n        className: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 34\n        }\n      }, e.task), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 111\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.isComplete(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, \" \", task, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteTask(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, \" delete \"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 83\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Show:\", /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }\n    }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 89\n      }\n    }, \"Completed\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/amt/Desktop/ApiCallWithReact/api-call-with-react/src/components/App.js"],"names":["React","App","Component","constructor","inputData","event","setState","newtask","target","value","addTask","tempList","state","list","temptask","task","iscomplete","push","deleteTask","givenIndex","splice","updateTask","index","isComplete","showActive","filter","element","showCompleted","render","map","e","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,SATc,GASFC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAxB,KAAd,CATP;;AAAA,SAWdC,OAXc,GAWJ,MAAM;AACd,UAAIC,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACA,UAAIC,QAAQ,GAAG;AAAEC,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWL,OAAnB;AAA4BS,QAAAA,UAAU,EAAE;AAAxC,OAAf;AACAL,MAAAA,QAAQ,CAACM,IAAT,CAAcH,QAAd;AACA,WAAKR,QAAL,CAAc;AAAEO,QAAAA,IAAI,EAAEF;AAAR,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAlBa;;AAAA,SAoBdW,UApBc,GAoBAC,UAAD,IAAgB;AAC3B,UAAIR,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACAF,MAAAA,QAAQ,CAACS,MAAT,CAAgBD,UAAhB,EAA2B,CAA3B;AACA,WAAKb,QAAL,CAAc;AAACO,QAAAA,IAAI,EAACF;AAAN,OAAd;AACD,KAzBa;;AAAA,SA2BdU,UA3Bc,GA2BAC,KAAD,IAAW;AACtB,UAAIX,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACAF,MAAAA,QAAQ,CAACW,KAAD,CAAR,CAAgBP,IAAhB,GAAuB,mBAAvB;AACA,WAAKT,QAAL,CAAc;AAACO,QAAAA,IAAI,EAACF;AAAN,OAAd;AACD,KAhCa;;AAAA,SAiCdY,UAjCc,GAiCCJ,UAAD,IAAgB;AAC5B,UAAIR,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACAF,MAAAA,QAAQ,CAACQ,UAAD,CAAR,CAAqBH,UAArB,GAAkC,CAACL,QAAQ,CAACQ,UAAD,CAAR,CAAqBH,UAAxD;AACA,WAAKV,QAAL,CAAc;AAACO,QAAAA,IAAI,EAACF;AAAN,OAAd;AACD,KAtCa;;AAAA,SAuCda,UAvCc,GAuCD,MAAM;AACjB,UAAIb,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACA,WAAKP,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAC,KAAKC,KAAL,CAAWC;AAArB,OAAd;AACAF,MAAAA,QAAQ,GAAGA,QAAQ,CAACc,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACV,UAAR,IAAoB,IAAjD,CAAX;AACA,WAAKV,QAAL,CAAc;AAACO,QAAAA,IAAI,EAACF;AAAN,OAAd;AAED,KA9Ca;;AAAA,SA+CdgB,aA/Cc,GA+CE,MAAM;AACpB,UAAIhB,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACA,WAAKP,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAC,KAAKC,KAAL,CAAWC;AAArB,OAAd;AACAF,MAAAA,QAAQ,GAAGA,QAAQ,CAACc,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACV,UAAR,IAAoB,KAAjD,CAAX;AACA,WAAKV,QAAL,CAAc;AAACO,QAAAA,IAAI,EAACF;AAAN,OAAd;AAED,KAtDa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXN,MAAAA,OAAO,EAAE;AAFE,KAAb;AAKD;AACD;;;AAgDAqB,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWL,OAAzB;AAAkC,MAAA,QAAQ,EAAE,KAAKH,SAAjD;AAA4D,MAAA,WAAW,EAAC,kBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKM,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,KAAKE,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAoB,CAACC,CAAD,EAAGC,GAAH,KAAW;AAC/B,UAAIhB,IAAI,GAAG,CAACe,CAAC,CAACd,UAAH,GAAgB,UAAhB,GAA6B,MAAxC;AACA,0BACM;AAAI,QAAA,GAAG,EAAEe,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe;AAAM,QAAA,OAAO,EAAE,MAAM,KAAKV,UAAL,CAAgBU,GAAhB,CAArB;AAA2C,QAAA,SAAS,EAAIhB,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+De,CAAC,CAACf,IAAjE,CAAf,eAA4F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5F,eACA;AAAQ,QAAA,OAAO,EAAI,MAAM,KAAKQ,UAAL,CAAgBQ,GAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiDhB,IAAjD,MADA,eAEA;AAAQ,QAAA,OAAO,EAAI,MAAM,KAAKG,UAAL,CAAgBa,GAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAEgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFhE,CADN;AAIO,KANP,CAHF,CADF,CALF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAT,eAA6B;AAAQ,MAAA,OAAO,EAAE,KAAKP,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B,eAA8E;AAAQ,MAAA,OAAO,EAAE,KAAKG,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA9E,CADF,CAnBF,CADF;AAyBD;;AApF8C","sourcesContent":["import React from \"react\";\nimport \"./css/to-do-list-css.css\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      newtask: \"\",\n\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n  inputData = event => this.setState({ newtask: event.target.value });\n /*Get a new task from state and put that one to the list.*/\n  addTask = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    let temptask = { task: this.state.newtask, iscomplete: false };\n    tempList.push(temptask);\n    this.setState({ list: tempList });\n    this.setState({ newtask: \"\" });\n  };\n  /*Delete task from the list*/\n  deleteTask = (givenIndex) => {\n    let tempList = [];\n    tempList = this.state.list;\n    tempList.splice(givenIndex,1);\n    this.setState({list:tempList});\n  }\n  /*Update task*/\n  updateTask = (index) => {\n    let tempList = [];\n    tempList = this.state.list;\n    tempList[index].task = \"sssssssssssssssss\";\n    this.setState({list:tempList});\n  }\n  isComplete =  (givenIndex) => {\n    let tempList = [];\n    tempList = this.state.list;\n    tempList[givenIndex].iscomplete = !tempList[givenIndex].iscomplete;\n    this.setState({list:tempList});\n  }\n  showActive = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    this.setState({tempList:this.state.list});\n    tempList = tempList.filter((element) => element.iscomplete!=true);\n    this.setState({list:tempList});\n\n  }\n  showCompleted = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    this.setState({tempList:this.state.list});\n    tempList = tempList.filter((element) => element.iscomplete!=false);\n    this.setState({list:tempList});\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"new-task\">\n          <input value={this.state.newtask} onChange={this.inputData} placeholder=\"enter a new task\" />\n          <button onClick={this.addTask}>Add </button>\n        </div>\n        <div className=\"list-box\">\n          <ul>\n          {\n\n            this.state.list.map((e,idx) => {\n            let task = !e.iscomplete ? \"complete\" : \"undo\";\n            return(\n                  <li key={idx} ><span onClick={() => this.updateTask(idx)} className = {task}>{e.task}</span><br/>\n                  <button onClick = {() => this.isComplete(idx)}> {task} </button>\n                  <button onClick = {() => this.deleteTask(idx)}> delete </button><hr/></li>);\n                  })\n          }\n          </ul>\n        </div>\n        <div>\n          <h3>Show:<button>All</button><button onClick={this.showActive}>Active</button><button onClick={this.showCompleted}>Completed</button></h3>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}