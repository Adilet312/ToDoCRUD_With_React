{"ast":null,"code":"var _jsxFileName = \"/home/amt/Desktop/ToDoCRUD_With_React/crud-with-react/src/components/Temp.js\";\nimport React from \"react\";\nimport \"./css/to-do-list-css.css\";\nexport default class Temp extends React.Component {\n  constructor() {\n    super();\n\n    this.inputData = event => this.setState({\n      newtask: event.target.value\n    });\n\n    this.addTask = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      let temptask = {\n        task: this.state.newtask,\n        iscomplete: false\n      };\n      tempList.push(temptask);\n      this.setState({\n        list: tempList\n      });\n      this.setState({\n        temp: tempList\n      });\n      this.setState({\n        newtask: \"\"\n      });\n    };\n\n    this.state = {\n      list: [],\n      newtask: \"\",\n      temp: [],\n      update: false\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.newtask,\n      onChange: this.inputData,\n      placeholder: \"enter a new task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Add \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, this.state.temp.map((e, idx) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        value: \"hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, e.task), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/amt/Desktop/ToDoCRUD_With_React/crud-with-react/src/components/Temp.js"],"names":["React","Temp","Component","constructor","inputData","event","setState","newtask","target","value","addTask","tempList","state","list","temptask","task","iscomplete","push","temp","update","render","map","e","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,SAVc,GAUFC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAxB,KAAd,CAVP;;AAAA,SAYdC,OAZc,GAYJ,MAAM;AACd,UAAIC,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAtB;AACA,UAAIC,QAAQ,GAAG;AAAEC,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWL,OAAnB;AAA4BS,QAAAA,UAAU,EAAE;AAAxC,OAAf;AACAL,MAAAA,QAAQ,CAACM,IAAT,CAAcH,QAAd;AACA,WAAKR,QAAL,CAAc;AAAEO,QAAAA,IAAI,EAAEF;AAAR,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEY,QAAAA,IAAI,EAAEP;AAAR,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KApBa;;AAEZ,SAAKK,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXN,MAAAA,OAAO,EAAE,EAFE;AAGXW,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMD;AACD;;;AAcAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWL,OAAzB;AAAkC,MAAA,QAAQ,EAAE,KAAKH,SAAjD;AAA4D,MAAA,WAAW,EAAC,kBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKM,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM,KAAKE,KAAL,CAAWM,IAAX,CAAgBG,GAAhB,CAAoB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAChC,0BACE;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,CAAC,CAACP,IAAxB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KAPC,CAFN,CADF,CALF,CADF;AAsBD;;AA/C+C","sourcesContent":["import React from \"react\";\nimport \"./css/to-do-list-css.css\";\n\nexport default class Temp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      newtask: \"\",\n      temp: [],\n      update: false,\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n  inputData = event => this.setState({ newtask: event.target.value });\n  /*Get a new task from state and put that one to the list.*/\n  addTask = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    let temptask = { task: this.state.newtask, iscomplete: false };\n    tempList.push(temptask);\n    this.setState({ list: tempList });\n    this.setState({ temp: tempList });\n    this.setState({ newtask: \"\" });\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"new-task\">\n          <input value={this.state.newtask} onChange={this.inputData} placeholder=\"enter a new task\"/>\n          <button onClick={this.addTask}>Add </button>\n        </div>\n        <div className=\"list-box\">\n          <ul>\n            {\n                this.state.temp.map((e, idx) => {\n                return (\n                  <li key={idx}>\n                    <span value='hidden'>{e.task}</span>\n                    <hr />\n                  </li>\n                );\n              })\n          }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}