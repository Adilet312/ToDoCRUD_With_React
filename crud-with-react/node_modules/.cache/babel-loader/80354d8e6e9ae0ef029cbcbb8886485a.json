{"ast":null,"code":"var _jsxFileName = \"/home/amt/Desktop/ApiCallWithReact/api-call-with-react/src/components/App.js\";\nimport React from \"react\";\nimport \"./css/to-do-list-css.css\";\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.inputData = event => this.setState({\n      newtask: event.target.value\n    });\n\n    this.addTask = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      let temptask = {\n        task: this.state.newtask,\n        iscomplete: false\n      };\n      tempList.push(temptask);\n      this.setState({\n        list: tempList\n      });\n      this.setState({\n        newtask: \"\"\n      });\n    };\n\n    this.deleteTask = givenIndex => {\n      let tempList = [];\n      tempList = this.state.list;\n      tempList.splice(givenIndex, 1);\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.changeLinkColor = givenLinks => this.setState({\n      show: givenLinks\n    });\n\n    this.isComplete = givenIndex => {\n      let tempList = [];\n      tempList = this.state.list;\n      tempList[givenIndex].iscomplete = !tempList[givenIndex].iscomplete;\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.showActive = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      this.setState({\n        tempList: this.state.list\n      });\n      tempList = tempList.filter(element => element.iscomplete !== true);\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.showCompleted = () => {\n      let tempList = [];\n      tempList = this.state.list;\n      this.setState({\n        tempList: this.state.list\n      });\n      tempList = tempList.filter(element => element.iscomplete !== false);\n      this.setState({\n        list: tempList\n      });\n    };\n\n    this.state = {\n      list: [],\n      newtask: \"\",\n      show: \"All\"\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.newtask,\n      onChange: this.inputData,\n      placeholder: \"enter a new task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Add \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, this.state.list.map((e, idx) => {\n      let task = !e.iscomplete ? \"complete\" : \"undo\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, e.task), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.isComplete(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, \" \", task, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteTask(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, \" delete \"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Show:\", /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.show === \"All\" ? \"active\" : \"\",\n      onClick: () => this.changeLinkColor(\"All\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.show === \"Active\" ? \"active\" : \"\",\n      onClick: () => {\n        this.changeLinkColor(\"Active\");\n        this.showActive();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.show === \"Completed\" ? \"active\" : \"\",\n      onClick: () => {\n        this.changeLinkColor(\"Completed\");\n        this.showCompleted();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Completed\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/amt/Desktop/ApiCallWithReact/api-call-with-react/src/components/App.js"],"names":["React","App","Component","constructor","inputData","event","setState","newtask","target","value","addTask","tempList","state","list","temptask","task","iscomplete","push","deleteTask","givenIndex","splice","changeLinkColor","givenLinks","show","isComplete","showActive","filter","element","showCompleted","render","map","e","idx"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/to-do-list-css.css\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      newtask: \"\",\n      show: \"All\"\n    };\n  }\n  /*Get task from the browser and set it to a newtask  state*/\n  inputData = event => this.setState({ newtask: event.target.value });\n  /*Get a new task from state and put that one to the list.*/\n  addTask = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    let temptask = { task: this.state.newtask, iscomplete: false };\n    tempList.push(temptask);\n    this.setState({ list: tempList });\n    this.setState({ newtask: \"\" });\n  };\n  /*Delete task from the list*/\n  deleteTask = givenIndex => {\n    let tempList = [];\n    tempList = this.state.list;\n    tempList.splice(givenIndex, 1);\n    this.setState({ list: tempList });\n  };\n  changeLinkColor = givenLinks => this.setState({ show: givenLinks });\n  isComplete = givenIndex => {\n    let tempList = [];\n    tempList = this.state.list;\n    tempList[givenIndex].iscomplete = !tempList[givenIndex].iscomplete;\n    this.setState({ list: tempList });\n  };\n  showActive = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    this.setState({ tempList: this.state.list });\n    tempList = tempList.filter(element => element.iscomplete !== true);\n    this.setState({ list: tempList });\n  };\n  showCompleted = () => {\n    let tempList = [];\n    tempList = this.state.list;\n    this.setState({ tempList: this.state.list });\n    tempList = tempList.filter(element => element.iscomplete !== false);\n    this.setState({ list: tempList });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"new-task\">\n          <input\n            value={this.state.newtask}\n            onChange={this.inputData}\n            placeholder=\"enter a new task\"\n          />\n          <button onClick={this.addTask}>Add </button>\n        </div>\n        <div className=\"list-box\">\n          <ul>\n            {this.state.list.map((e, idx) => {\n              let task = !e.iscomplete ? \"complete\" : \"undo\";\n              return (\n                <li key={idx}>\n                  <span className={task}>{e.task}</span>\n                  <br />\n                  <button onClick={() => this.isComplete(idx)}> {task} </button>\n                  <button onClick={() => this.deleteTask(idx)}> delete </button>\n                  <hr />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className='sort-buttons'>\n          <h3>\n            Show:\n            <button\n              className={this.state.show === \"All\" ? \"active\" : \"\"}\n              onClick={() => this.changeLinkColor(\"All\")}\n            >\n              All\n            </button>\n            <button\n              className={this.state.show === \"Active\" ? \"active\" : \"\"}\n              onClick={() => {\n                this.changeLinkColor(\"Active\");\n                this.showActive();\n              }}\n            >\n              Active\n            </button>\n            <button\n              className={this.state.show === \"Completed\" ? \"active\" : \"\"}\n              onClick={() => {\n                this.changeLinkColor(\"Completed\");\n                this.showCompleted();\n              }}\n            >\n              Completed\n            </button>\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}