{"ast":null,"code":"var _jsxFileName = \"/home/amt/Desktop/ApiCallWithReact/api-call-with-react/src/components/TaskList.js\";\nimport React from \"react\";\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteTask = index => {\n      let tempList = [];\n      tempList = this.props.list;\n      tempList.splice(index, 1);\n      this.props.deleteTask(tempList);\n    };\n\n    this.isComplete = index => {\n      let tempList = [];\n      tempList = this.props.list;\n      tempList[index].iscomplete = !tempList[index].iscomplete;\n      this.props.isComplete(tempList);\n    };\n\n    this.changeLinkColor = change_color => this.setState({\n      show: change_color\n    });\n\n    this.showAll = () => this.props.showAll(this.props.list);\n\n    this.state = {\n      show: 'All'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-button-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }, this.props.templist.map((e, idx) => {\n      let task = !e.iscomplete ? \"complete\" : \"undo\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 30\n        }\n      }, e.task), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteTask(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.isComplete(idx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 30\n        }\n      }, task), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 30\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Show:\", /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.show === \"All\" ? \"active\" : \"\",\n      onClick: () => {\n        this.changeLinkColor(\"All\");\n        this.showAll();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, \"All\"))));\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/home/amt/Desktop/ApiCallWithReact/api-call-with-react/src/components/TaskList.js"],"names":["React","TaskList","Component","constructor","props","deleteTask","index","tempList","list","splice","isComplete","iscomplete","changeLinkColor","change_color","setState","show","showAll","state","render","templist","map","e","idx","task"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass TaskList extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      show:'All'\n    }\n  }\n  deleteTask = (index) => {\n    let tempList = [];\n    tempList = this.props.list;\n    tempList.splice(index, 1);\n    this.props.deleteTask(tempList);\n  };\n isComplete = (index) => {\n   let tempList = [];\n   tempList = this.props.list;\n   tempList[index].iscomplete = !tempList[index].iscomplete;\n   this.props.isComplete(tempList);\n }\n changeLinkColor= (change_color) => this.setState({show:change_color});\n showAll = () => this.props.showAll(this.props.list);\n  render(){\n\n    return(<div className = 'box-button-list'>\n            <div className = 'list-box'>\n                  <ul>\n                   {\n                     this.props.templist.map((e, idx) =>{\n                       let task = !e.iscomplete ? \"complete\" : \"undo\";\n                       return(\n                           <li key={idx}>\n                             <span className={task}>{e.task}</span>\n                             <br />\n                             <button onClick = {() => this.deleteTask(idx)}>Delete</button>\n                             <button onClick = {() => this.isComplete(idx)}>{task}</button>\n                             <hr/>\n                           </li>)\n                      })\n                   }\n                  </ul>\n              </div>\n              <div className='sort-buttons'>\n                <h3>\n                  Show:\n                  <button\n                    className={this.state.show === \"All\" ? \"active\" : \"\"}\n                    onClick={() => {this.changeLinkColor(\"All\"); this.showAll()}}\n                  >\n                    All\n                  </button>\n\n                </h3>\n              </div>\n          </div>);\n  }\n}\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}